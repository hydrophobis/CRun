name: Build for Release

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Install g++ (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y g++

    - name: Compile Code (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        g++ -o crun crun.cc

    - name: Upload Release Asset (Compiled Binary)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{ 'crun' }}
        asset_name: ${{ 'crun' }}
        asset_content_type: application/octet-stream

    - name: Upload `PKGBUILD` File
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: sources/PKGBUILD
        asset_name: PKGBUILD
        asset_content_type: text/plain

    - name: Upload `install` File
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: install
        asset_name: install
        asset_content_type: text/plain
