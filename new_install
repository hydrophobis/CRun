#!/bin/bash

# Define repository info
OWNER="hydrophobis"
REPO="CRun"

# Function to get the latest release from GitHub API
get_latest_release() {
  wget --silent "https://api.github.com/repos/$OWNER/$REPO/releases/latest" | 
  grep '"tag_name":' | 
  sed -E 's/.*"tag_name": "([^"]+)".*/\1/'
}

# Fetch the latest release version
LATEST_VERSION=$(get_latest_release)
echo "Latest version: $LATEST_VERSION"

# Define the download URLs for the AppImage, .deb, and other files
BASE_URL="https://github.com/$OWNER/$REPO/releases/download/$LATEST_VERSION"

APPIMAGE_URL="$BASE_URL/crun-x86_64.AppImage"
DEB_URL="$BASE_URL/crun_$LATEST_VERSION_amd64.deb"

# Function to download a file from GitHub
download_file() {
  URL=$1
  OUTPUT=$2
  echo "Downloading $OUTPUT from $URL..."
  wget -L -o "$OUTPUT" "$URL"
}

# Check if /etc/os-release exists
if [ -f /etc/os-release ]; then
    . /etc/os-release
else
    exit
fi

. /etc/os-release
if [ $NAME == "Ubuntu" || $NAME == "Debian"]; then
    download_file "$DEB_URL" "crun_${LATEST_VERSION}_amd64.deb"
elif [ $NAME == "Arch Linux" ]; then 
    

# Download the assets (AppImage, Deb, or binary)
download_file "$APPIMAGE_URL" "crun-x86_64.AppImage"


# Make the AppImage executable
chmod +x crun-x86_64.AppImage

# Install the .deb package if available
if [ -f "crun_${LATEST_VERSION}_amd64.deb" ]; then
  echo "Installing .deb package..."
  sudo dpkg -i "crun_${LATEST_VERSION}_amd64.deb"
  sudo apt-get install -f -y  # Fix missing dependencies
else
  echo "No .deb package found. Skipping .deb installation."
fi

# Provide the user with the option to run the AppImage
read -p "Do you want to run the AppImage now? (y/n): " choice
if [[ "$choice" == "y" || "$choice" == "Y" ]]; then
  ./crun-x86_64.AppImage
else
  echo "You can run the AppImage later using './crun-x86_64.AppImage'."
fi

echo "Installation complete!"
