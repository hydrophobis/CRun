#!/bin/bash
VERSION=$1

# Define repository info
OWNER="hydrophobis"
REPO="CRun"

# Function to get the latest release from GitHub API
get_latest_release() {
    curl -s "https://api.github.com/repos/$OWNER/$REPO/tags" | jq -r '.[0].name'
}

LATEST_VERSION=$(get_latest_release)
echo "Latest version: $LATEST_VERSION"

if [ -n "$VERSION" ]; then
  LATEST_VERSION="$VERSION"
  echo "Using provided version: $LATEST_VERSION"
fi

# Define the download URLs for the AppImage, .deb, and other files
BASE_URL="https://github.com/$OWNER/$REPO/releases/download/$LATEST_VERSION"
PKGBUILD_URL="$BASE_URL/PKGBUILD"

# Function to download a file from GitHub with debugging using cURL
download_file() {
  URL=$1
  OUTPUT=$2
  echo "Attempting to download $OUTPUT from $URL..."
  curl -L -o "$OUTPUT" "$URL"
}

# Determine the OS and download the corresponding file
. /etc/os-release
if [ "$NAME" != "Arch Linux" ]; then
  download_file "$BASE_URL/crun" "crun"
elif [ "$NAME" == "Arch Linux" ]; then 
  download_file "$PKGBUILD_URL" "PKGBUILD"
fi

# Handle downloaded file
if [ -f "crun" ]; then
  sudo cp crun /bin/crun
  rm crun.1
  rm crun
else
  echo "No executable package found. Assuming PKGBUILD is ready."
  makepkg -si
  rm -r -f CRun
  rm -r -f pkg
  rm -r -f src
  rm PKGBUILD
fi

read -p "Install updater?(Without this the -u option will not work)(Y/N): " INPUT
if [ $INPUT == 'Y' ]; then
  sudo cp $0 /bin/crun_update && sudo chmod +x /bin/crun_update
fi

echo "Installation complete"
